<?xml version="1.0" encoding="UTF-8"?>
<!-- debug可以查看log4j的装配过程,设置成OFF,即可关闭状态日志 -->
<configuration status="OFF">

    <properties>
        <!--catalina.home:tomcat的JVM的系统属性-->
        <!--<property name="logPath">${sys:catalina.home}/logs</property>-->
        <property name="logPath">E:/Log/SillyHatGenerator/logs</property>
        <!-- 日志输出级别 -->
        <!--<property name="output_log_level">DEBUG</property>-->
        <property name="output_log_level">INFO</property>
    </properties>

    <appenders>
        <!--这个输出控制台的配置 -->
        <console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY" />
            <!--这个是输出日志的格式 -->
            <PatternLayout pattern="[sillyhat-project] | [%thread] %-5p %d{yyyy-MM-dd HH:mm:ss} | [%c] %m%n" />
        </console>

        <!--文件会打印出所有信息,这个log每次运行程序会自动清空,由append属性决定(false),适合临时测试用 -->
        <file name="test" fileName="${logPath}/mgface-project-test.log" append="false">
            <PatternLayout pattern="[sillyhat-project] %-5p %d{yyyy-MM-dd HH:mm:ss} | [%c{1}] %m%n" />
        </file>

        <!-- 按天划分日志 -->
        <rollingFile name="RollingFile" filename="${logPath}/mgface-project.log" filepattern="${logPath}/sillyhat-project-%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="[sillyhat-project] | [%thread] %-5p %d{yyyy-MM-dd HH:mm:ss} | [%c] %m%n" />
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </rollingFile>
        <!-- 只显示error+级别的信息,按天划分日志 -->
        <rollingFile name="RollingErrorFile" filename="${logPath}/mgface-project-error.log"
                     filepattern="${logPath}/mgface-project-error-%d{yyyy-MM-dd}.log">
            <PatternLayout
                    pattern="[sillyhat-project] | [%thread] %-5p %d{yyyy-MM-dd HH:mm:ss} | [%c] %m%n" />
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </rollingFile>
    </appenders>
    <loggers>
        <asyncRoot level="${output_log_level}">
            <appender-ref ref="Console" />
            <appender-ref ref="RollingFile" />
            <appender-ref ref="RollingErrorFile" />
        </asyncRoot>
        <!-- 所有logger都会继承root<asyncRoot>(logger) -->
        <!--某些包的日志需要单独定义日记级别(additivity开启的话,由于这个logger也是满足asyncRoot的,所以会被打印两遍。)-->
        <logger name="com.jolbox.bonecp" level="debug" additivity="false">
            <appender-ref ref="Console" />
            <appender-ref ref="RollingFile" />
            <appender-ref ref="RollingErrorFile" />
        </logger>
        <logger name="org.mybatis" level="debug" additivity="false">
            <appender-ref ref="Console" />
            <appender-ref ref="RollingFile" />
            <appender-ref ref="RollingErrorFile" />
        </logger>
        <!--login模块的mapper日志 -->
        <logger name="com.mgface.module.login.mapper" level="debug" additivity="false">
            <appender-ref ref="Console" />
            <appender-ref ref="RollingFile" />
            <appender-ref ref="RollingErrorFile" />
        </logger>
    </loggers>
</configuration>